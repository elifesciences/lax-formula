[uwsgi]
chdir=/opt/bot-lax-adaptor/
pythonpath=/opt/bot-lax-adaptor/src/

{% if salt['grains.get']('osrelease') == "14.04" %}

uid={{ pillar.elife.webserver.username }}
gid={{ pillar.elife.webserver.username }}
socket = /tmp/bot-lax-uwsgi.sock
chmod-socket = 666
logto = /var/log/bot-lax-adaptor/uwsgi.log

{% else %}

# systemd service now handles dropping permissions
#uid={{ pillar.elife.webserver.username }}
#gid={{ pillar.elife.webserver.username }}

# systemd now handles the socket
# this fixes many problems restarting uwsgi service with systemd
# your nginx conf file needs the new location of this socket
# see /lib/systemd/system/uwsgi-elife-metrics.socket
#socket = /tmp/appname-uwsgi.sock
#chmod-socket = 666

# moved to the systemd service file
# quite possibly *all* of this file could become global defaults
#logto = /var/log/uwsgi.log

# further options for uwsgi+systemd:
#   https://uwsgi-docs.readthedocs.io/en/latest/Systemd.html#one-service-per-app-in-systemd

# 'cheap' mode, don't spawn workers until first request
#   https://uwsgi-docs.readthedocs.io/en/latest/Options.html?highlight=cheap#uwsgi-options
cheap=True
# "automatically rewrite SCRIPT_NAME and PATH_INFO"
#   https://uwsgi-docs.readthedocs.io/en/latest/Options.html?highlight=cheap#manage-script-name
manage-script-name=True

{% endif %}

module=wsgi:app
virtualenv=/opt/bot-lax-adaptor/venv/
master=True
# time to revisit this?
processes=1
#threads=2
vacuum=True
max-requests=5000

# kill self after this many seconds
# nginx is 80s, this must be lower.
harakiri = 79

# By default uWSGI will execute Python code within a sub interpreter of the process rather than the main Python interpreter 
# created when Python is first initialized. This is done to allow multiple separate Python web applications to be run within 
# the one process but to be sufficiently separated so as to not interfere with each other. Older versions of uWSGI can fail 
# however when using sub interpreters with threading enabled. It is therefore safest to use this option and restrict yourself 
# to a single web application per process. Running a single web application in each process with uWSGI is the normal use case 
# so it would be unlikely that this restriction would be an issue.
# - https://docs.newrelic.com/docs/agents/python-agent/hosting-mechanisms/python-agent-uwsgi
single-interpreter = True
